{"version":3,"sources":["App.js","index.js","Main.js"],"names":["storage","global","localStorage","App","stateInit","location","getItem","localFile","localName","useState","state","setState","page","setPage","renditionRef","useRef","tocRef","href","style","float","as","onChange","event","results","length","e","file","type","alert","target","result","name","height","fontFamily","position","className","url","filePath","locationChanged","epubcifi","current","start","displayed","chapter","find","item","total","label","epubInitOptions","openAs","epubOptions","flow","manager","getRendition","rendition","themes","register","body","padding","p","color","h1","h2","h3","h4","section","font","fontSize","select","tocChanged","toc","bottom","left","textAlign","zIndex","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kLAOMA,EAAUC,EAAOC,cAAgB,KAuJxBC,IArJH,WACV,IAAMC,EAAY,CAChBC,SACEL,GAAWA,EAAQM,QAAQ,iBACvBN,EAAQM,QAAQ,iBAChB,EACNC,UAAW,KACXC,UAAW,MAEb,EAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAgBA,IAAMC,EAAeC,iBAAO,MACtBC,EAASD,iBAAO,MAatB,OACE,gCACE,+BACE,6BACE,mBAAGE,KAAK,QAAR,oBAEF,6BACE,mBAAGA,KAAK,QAAR,oBAEF,6BACE,mBAAGA,KAAK,WAAR,uBAEF,oBAAIC,MAAO,CAAEC,MAAO,SAApB,SACE,cAAC,IAAD,CAAiBC,GAAG,SAASC,SAzCrC,SAA0BC,EAAOC,GAC/B,GAAIA,EAAQC,OAAS,EAAG,CACtB,kBAAkBD,EAAQ,GAA1B,GAAOE,EAAP,KAAUC,EAAV,KACA,GAAkB,yBAAdA,EAAKC,KACP,OAAOC,MAAM,oBAEfjB,EAAS,CACPJ,UAAWkB,EAAEI,OAAOC,OACpBtB,UAAWkB,EAAKK,KAChB1B,SAAU,SAgCR,SACE,8DAIN,qBACEa,MAAO,CACLc,OAAQ,OACRC,WAAY,cACZC,SAAU,YAEZC,UAAU,MANZ,SAQE,cAAC,cAAD,CACEC,IACE1B,EAAM2B,UACN,wLAEFC,gBA3CgB,SAACC,GACvB,GAAIzB,EAAa0B,SAAWxB,EAAOwB,QAAS,CAC1C,MAA4B1B,EAAa0B,QAAQnC,SAASoC,MAAlDC,EAAR,EAAQA,UAAWzB,EAAnB,EAAmBA,KACb0B,EAAU3B,EAAOwB,QAAQI,MAAK,SAACC,GAAD,OAAUA,EAAK5B,OAASA,KAC5DJ,EAAQ,QAAD,OACG6B,EAAU9B,KADb,eACwB8B,EAAUI,MADlC,uBAEHH,EAAUA,EAAQI,MAAQ,UAsC1B1C,SAAUK,EAAML,SAChB2C,gBAAiB,CACfC,OAAQ,QAEVC,YAAa,CACXC,KAAM,WACNC,QAAS,cAEXC,aAAc,SAACC,GACbxC,EAAa0B,QAAUc,EACvBA,EAAUC,OAAOC,SAAS,SAAU,CAClCC,KAAM,CACJC,QAAS,SAEXC,EAAG,CACD,cAAe,MACfC,MAAO,mBACP,cAAe,MACf,gBAAiB,aACjB,cAAe,eAEjBC,GAAI,CACF,cAAe,cACfD,MAAO,mBACP,YAAa,UACb,cAAe,UAEjBE,GAAI,CACF,cAAe,cACfF,MAAO,mBACP,YAAa,UACb,cAAe,UAEjBG,GAAI,CACF,cAAe,cACfH,MAAO,mBACP,YAAa,UACb,cAAe,UAEjBI,GAAI,CACF,cAAe,cACfJ,MAAO,mBACP,YAAa,UACb,cAAe,UAEjBK,QAAS,CACP,gBAAiB,QACjB,eAAgB,WAIpBX,EAAUC,OAAOW,KAAjB,eACAZ,EAAUC,OAAOY,SAAS,QAC1Bb,EAAUC,OAAOa,OAAO,WAE1BC,WAAY,SAACC,GAAD,OAAUtD,EAAOwB,QAAU8B,OAG3C,qBACEpD,MAAO,CACLgB,SAAU,WACVF,OAAQ,OACRmC,SAAU,OACVI,OAAQ,OAERC,KAAM,OACNC,UAAW,SACXC,OAAQ,EACRd,MAAO,oBAVX,SAaGhD,U,mDCxJT,mDAKM+D,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,MAEFJ,I,iCCVF,uB","file":"static/js/main.b0a2ae31.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { ReactReader } from \"react-reader\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport Main from \"./Main\";\n\nconst storage = global.localStorage || null;\n\nconst App = () => {\n  const stateInit = {\n    location:\n      storage && storage.getItem(\"epub-location\")\n        ? storage.getItem(\"epub-location\")\n        : 2,\n    localFile: null,\n    localName: null\n  };\n  const [state, setState] = useState(stateInit);\n  const [page, setPage] = useState(\"\");\n\n  function handleChangeFile(event, results) {\n    if (results.length > 0) {\n      const [e, file] = results[0];\n      if (file.type !== \"application/epub+zip\") {\n        return alert(\"Unsupported type\");\n      }\n      setState({\n        localFile: e.target.result,\n        localName: file.name,\n        location: null\n      });\n    }\n  }\n\n  const renditionRef = useRef(null);\n  const tocRef = useRef(null);\n  const locationChanged = (epubcifi) => {\n    if (renditionRef.current && tocRef.current) {\n      const { displayed, href } = renditionRef.current.location.start;\n      const chapter = tocRef.current.find((item) => item.href === href);\n      setPage(\n        `Page ${displayed.page} of ${displayed.total} in chapter ${\n          chapter ? chapter.label : \"n/a\"\n        }`\n      );\n    }\n  };\n\n  return (\n    <div>\n      <ul>\n        <li>\n          <a href=\"#home\">Home</a>\n        </li>\n        <li>\n          <a href=\"#news\">News</a>\n        </li>\n        <li>\n          <a href=\"#contact\">Contact</a>\n        </li>\n        <li style={{ float: \"right\" }}>\n          <FileReaderInput as=\"buffer\" onChange={handleChangeFile}>\n            <button>Upload local epub</button>\n          </FileReaderInput>\n        </li>\n      </ul>\n      <div\n        style={{\n          height: \"95vh\",\n          fontFamily: \"Droid Serif\",\n          position: \"relative\"\n        }}\n        className=\"App\"\n      >\n        <ReactReader\n          url={\n            state.filePath ||\n            \"https://github.com/Gutha-Vamsi-Krishna/epub/blob/main/The_Lean_Startup_How_Todays_Entrepreneurs_Use_Continuous_Innovation_to_Create_Radically_Successful_Businesses_by_Eric_Ries.epub\"\n          }\n          locationChanged={locationChanged}\n          location={state.location}\n          epubInitOptions={{\n            openAs: \"epub\"\n          }}\n          epubOptions={{\n            flow: \"scrolled\",\n            manager: \"continuous\"\n          }}\n          getRendition={(rendition) => {\n            renditionRef.current = rendition;\n            rendition.themes.register(\"custom\", {\n              body: {\n                padding: \"500px\"\n              },\n              p: {\n                \"line-height\": \"1.7\",\n                color: \"rgba(61,61,78,1)\",\n                \"font-weight\": \"400\",\n                \"overflow-wrap\": \"break-word\",\n                \"font-family\": \"Droid Serif\"\n              },\n              h1: {\n                \"font-family\": \"Nunito Sans\",\n                color: \"rgba(46,46,64,1)\",\n                \"font-size\": \"2.25rem\",\n                \"line-height\": \"2.5rem\"\n              },\n              h2: {\n                \"font-family\": \"Nunito Sans\",\n                color: \"rgba(46,46,64,1)\",\n                \"font-size\": \"2.25rem\",\n                \"line-height\": \"2.5rem\"\n              },\n              h3: {\n                \"font-family\": \"Nunito Sans\",\n                color: \"rgba(46,46,64,1)\",\n                \"font-size\": \"2.25rem\",\n                \"line-height\": \"2.5rem\"\n              },\n              h4: {\n                \"font-family\": \"Nunito Sans\",\n                color: \"rgba(46,46,64,1)\",\n                \"font-size\": \"2.25rem\",\n                \"line-height\": \"2.5rem\"\n              },\n              section: {\n                \"padding-right\": \"400px\",\n                \"padding-left\": \"400px\"\n              }\n            });\n\n            rendition.themes.font(`Droid Serif`);\n            rendition.themes.fontSize(\"20px\");\n            rendition.themes.select(\"custom\");\n          }}\n          tocChanged={(toc) => (tocRef.current = toc)}\n        />\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          height: \"10px\",\n          fontSize: \"14px\",\n          bottom: \"1rem\",\n          // right: \"1rem\",\n          left: \"1rem\",\n          textAlign: \"center\",\n          zIndex: 1,\n          color: \"rgba(61,61,78,1)\"\n        }}\n      >\n        {page}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n","import \"./styles.css\";\r\n\r\nimport React, { useRef, useState } from \"react\";\r\nimport { ReactReader } from \"react-reader\";\r\n\r\nconst Main = (props) => {\r\n  // const [page, setPage] = useState(\"\");\r\n\r\n  console.log(\"rendered\");\r\n  console.log(props.filePath);\r\n\r\n  // const renditionRef = useRef(null);\r\n  // const tocRef = useRef(null);\r\n  // const locationChanged = (epubcifi) => {\r\n  //   if (renditionRef.current && tocRef.current) {\r\n  //     const { displayed, href } = renditionRef.current.location.start;\r\n  //     const chapter = tocRef.current.find((item) => item.href === href);\r\n  //     setPage(\r\n  //       `Page ${displayed.page} of ${displayed.total} in chapter ${\r\n  //         chapter ? chapter.label : \"n/a\"\r\n  //       }`\r\n  //     );\r\n  //   }\r\n  // };\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"95vh\",\r\n          fontFamily: \"Droid Serif\",\r\n          position: \"relative\"\r\n        }}\r\n        className=\"App\"\r\n      >\r\n        <ReactReader\r\n          url={props.state.filePath}\r\n          location={props.state.location}\r\n          locationChanged={locationChanged}\r\n          epubInitOptions={{\r\n            openAs: \"epub\"\r\n          }}\r\n          epubOptions={{\r\n            flow: \"scrolled\",\r\n            manager: \"continuous\"\r\n          }}\r\n          getRendition={(rendition) => {\r\n            // renditionRef.current = rendition;\r\n            rendition.themes.register(\"custom\", {\r\n              body: {\r\n                padding: \"500px\"\r\n              },\r\n              p: {\r\n                \"line-height\": \"1.7\",\r\n                color: \"rgba(61,61,78,1)\",\r\n                \"font-weight\": \"400\",\r\n                \"overflow-wrap\": \"break-word\",\r\n                \"font-family\": \"Droid Serif\"\r\n              },\r\n              h1: {\r\n                \"font-family\": \"Nunito Sans\",\r\n                color: \"rgba(46,46,64,1)\",\r\n                \"font-size\": \"2.25rem\",\r\n                \"line-height\": \"2.5rem\"\r\n              },\r\n              h2: {\r\n                \"font-family\": \"Nunito Sans\",\r\n                color: \"rgba(46,46,64,1)\",\r\n                \"font-size\": \"2.25rem\",\r\n                \"line-height\": \"2.5rem\"\r\n              },\r\n              h3: {\r\n                \"font-family\": \"Nunito Sans\",\r\n                color: \"rgba(46,46,64,1)\",\r\n                \"font-size\": \"2.25rem\",\r\n                \"line-height\": \"2.5rem\"\r\n              },\r\n              h4: {\r\n                \"font-family\": \"Nunito Sans\",\r\n                color: \"rgba(46,46,64,1)\",\r\n                \"font-size\": \"2.25rem\",\r\n                \"line-height\": \"2.5rem\"\r\n              },\r\n              section: {\r\n                \"padding-right\": \"400px\",\r\n                \"padding-left\": \"400px\"\r\n              }\r\n            });\r\n\r\n            rendition.themes.font(`Droid Serif`);\r\n            rendition.themes.fontSize(\"20px\");\r\n            rendition.themes.select(\"custom\");\r\n          }}\r\n          // tocChanged={(toc) => (tocRef.current = toc)}\r\n        />\r\n      </div>\r\n      {/* <div\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"10px\",\r\n          fontSize: \"14px\",\r\n          bottom: \"1rem\",\r\n          // right: \"1rem\",\r\n          left: \"1rem\",\r\n          textAlign: \"center\",\r\n          zIndex: 1,\r\n          color: \"rgba(61,61,78,1)\"\r\n        }}\r\n      >\r\n        {page}\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}